plugins {
    id 'java-library'
}

sourceCompatibility = 1.8

dependencies {
    // Must use CF local because this checker depends on features that have not yet been
    // released. TODO: update to a real CF release once it is April, 2020 or later and
    //  typetools#2871 has been merged
    //
    // implementation "org.checkerframework:checker:${versions.checkerFramework}"
    def cfHome = String.valueOf(System.getenv("CHECKERFRAMEWORK"))
    implementation files(cfHome + "/checker/dist/checker.jar")

    implementation project(":no-literal-qual")

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.checkerframework:framework-test:${versions.checkerFramework}"

    // For testing with a compiled version of a test on the classpath,
    // to ensure that defaults are correct.
    testImplementation files('tests/prebuilt')
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

apply from: rootProject.file("gradle-mvn-push.gradle")

// run google java format to enforce style
spotless {
    // uncomment this line to temporarily disable spotless (i.e. when debugging)
    // enforceCheck = false
    java {
        googleJavaFormat()
    }
}

task printClasspath {
    doLast {
        println sourceSets.main.runtimeClasspath.asPath
    }
}
