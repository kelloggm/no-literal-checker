plugins {
    id 'java-library'
}

sourceCompatibility = 1.8

configurations {
    // for putting Error Prone javac in bootclasspath for running tests
    // on Java 8 JDKs
    errorproneJavac
}

dependencies {

    implementation "org.checkerframework:checker:${versions.checkerFramework}"

    implementation project(":no-literal-qual")

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.checkerframework:framework-test:${versions.checkerFramework}"

    // For testing with a compiled version of a test on the classpath,
    // to ensure that defaults are correct.
    testImplementation files('tests/prebuilt')

    implementation "com.google.errorprone:javac:9+181-r4173-1"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

test {
    if (!JavaVersion.current().java9Compatible) {
        jvmArgs "-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"
    }
}

apply from: rootProject.file("gradle-mvn-push.gradle")

// run google java format to enforce style
spotless {
    // uncomment this line to temporarily disable spotless (i.e. when debugging)
    // enforceCheck = false
    java {
        googleJavaFormat()
    }
}

task printClasspath {
    doLast {
        println sourceSets.main.runtimeClasspath.asPath
    }
}
